import java.util.ArrayList;

public class SampleBoard extends Board {
    public SampleBoard() {
        super();

        this.patternClique = new int[]{0, 1, 2, 3, 4, 5, 6, -1, -1, -1, -1, -1, 7, 8, -1, -1, -1, -1, 9,
                10, -1, -1, -1, -1, 11, 12, -1, -1, -1, -1, 13, 14, -1, -1, -1, -1,
                -1, 15, 16, 17, 18, 19, 20, 21};
        this.colorClique = new int[]{0, 1, 2, 3, 4, 5, 6, -1, -1, -1, -1, -1, 7, 8, -1, -1, -1, -1, 9,
                10, -1, -1, -1, -1, 11, 12, -1, -1, -1, -1, 13, 14, -1, -1, -1, -1,
                -1, 15, 16, 17, 18, 19, 20, 21};

        for (int i = 0; i < this.patternClique.length; i++) {
            int pVal = patternClique[i];
            int cVal = colorClique[i];

            if (pVal >= 0) {
                this.patternCliqueMembers[pVal] = new ArrayList<>(1);
                this.patternCliqueMembers[pVal].add(i);
            }
            if (cVal >= 0) {
                this.colorCliqueMembers[pVal] = new ArrayList<>(1);
                this.colorCliqueMembers[cVal].add(i);
            }

        }

        this.colors = new int[]{5, 0, 2, 3, 5, 1, 1, -1, -1, -1, -1, -1, 4, 4, -1, -1, -1, -1, 3, 0, -1, -1, -1, -1, 5, 3, -1, -1, -1, -1, 1, 5, -1, -1, -1, -1, -1, 4, 0, 2, 4, 1, 2, 0};
        this.patterns = new int[]{5, 1, 0, 3, 2, 5, 4, -1, -1, -1, -1, -1, 1, 3, -1, -1, -1, -1, 2, 0, -1, -1, -1, -1, 4, 5, -1, -1, -1, -1, 3, 1, -1, -1, -1, -1, -1, 4, 3, 4, 0, 1, 2, 5};

        this.neighbors = new int[][]{
                //rows
                {-1, 1, 7, 6, -1, -1}, {-1, 2, 8, 7, 0, -1}, {-1, 3, 9, 8,
                1, -1}, {-1, 4, 10, 9, 2, -1}, {-1, 5, 11, 10, 3, -1}, {-1, -1, 12,
                11, 4, -1}, {0, 7, 14, 13, -1, -1}, {1, 8, 15, 14, 6, 0}, {2, 9, -1,
                15, 7, 1}, {3, 10, 16, -1, 8, 2}, {4, 11, 17, 16, 9, 3}, {5, 12,
                18, 17, 10, 4}, {-1, -1, -1, 18, 11, 5}, {6, 14,
                19, -1, -1, -1}, {7, 15, 20, 19, 13, 6}, {8, -1, 21, 20, 14,
                7}, {10, 17, -1, 22, -1, 9}, {11, 18, 23, -1, 16, 10}, {12, -1, 24,
                23, 17, 11}, {14, 20, 26, 25, -1, -1, 13}, {15, 21, -1, 26, 19,
                14}, {-1, 22, 27, -1, 20, 15}, {16, -1, 28, 27, 21, -1}, {18, 24,
                30, 29, -1, 17}, {-1, -1, -1, 30, 23, 18}, {19, 26,
                31, -1, -1, -1}, {20, -1, 32, 31, 25, 19}, {22, 28, 24, 33, -1,
                21}, {-1, 29, 35, 34, 27, 22}, {23, 30, 36, 35, 28, -1}, {24, -1,
                37, 36, 29, 23}, {26, 32, 38, -1, -1, 25}, {-1, 33, 39, 38, 31,
                26}, {27, 34, 40, 39, 32, -1}, {28, 35, 41, 40, 33, 27}, {29, 36,
                42, 41, 34, 28}, {30, 37, 43, 42, 35, 29}, {-1, -1, -1, 43, 36,
                30}, {32, 39, -1, -1, -1, 31}, {33, 40, -1, -1, 38, 32}, {34,
                41, -1, -1, 39, 33}, {35, 42, -1, -1, 40, 34}, {36, 43, -1, -1, 41,
                35}, {37, -1, -1, -1, 42, 36}};


        //this was quite some work...

    }
}
